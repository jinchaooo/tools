# get latest docker image with tensorflow supporting gpu
docker pull tensorflow/tensorflow:latest-gpu-py3-jupyter

# use Dockerfile to build your own image
# otherwise just run image if you already have an image
#
# assume Dockerfile is in current directory
# jc is my image name
docker build --tag jc .

# create a container with name jinchao
# bind the current host dir to /home/docker inside container
docker run --name jinchao -u $(id -u):$(id -g) --gpus all --mount type=bind,source="$(pwd)",target=/home/docker -it jc bash

# EXIT a container without stopping it: ctrl+p followed by ctrl+q
# STOP a container: type 'exit' to exit bash inside the container

# reattach to a stopped container
docker start jinchao
docker attach jinchao

# when you execute a container using docker run IMAGE-NAME, the container is not removed 
# when the application finishes. Actually, you can type:
# docker ps -a
# to see the container. This is useful in many ways. For instance, you can restart the container without 
# losing the data inside, you can commit changes, you can see the logs, you can even log and look at the files inside.
#
# Using “—rm” forces docker to remove the container when the main application finishes. 
# Hence, it is not possible to do any of the stuff mentioned in the previous paragraph. 
# However, this cleans your system of useless containers. Some tools such as docker compose automatically do this. 

# tensorflow 1.15 is the last version before tensorflow 2.x, it requires cuda 10.0 instead of cuda 10.1
# Inside container, you can install different cuda versions from host. 
# To install cuda 10.0 instead of using 10.1, run the following:
# wget https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.0.130_410.48_linux
# Then run the downloaded script to install and use cuda 10.0 (with tensorflow 1.15)
# Pay attention not to install NVIDIA Driver, only install CUDA. Use nvcc --version to check the cuda version.

# To install python3.6 from source, need to install some dependent packages first:
# sudo apt-get install libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev
# SSL is required especially for pip
# To install tensorflow-gpu: pip install --ignore-installed --upgrade tensorflow-gpu==1.9
